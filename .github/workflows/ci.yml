name: Continuous Integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    
jobs:
  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: | 
            3.1.x
            5.0.x
            6.0.x
      - name: Run tests
        run: dotnet build /p:NetCoreOnly=True
      - name: Run tests
        run: dotnet test --no-build

  windows-test:
    name: Test (.NET Framework)
    runs-on: windows-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5
      - name: Setup VSTest
        uses: darenm/Setup-VSTest@v1
      - name: Navigate to Workspace
        run: cd $GITHUB_WORKSPACE
      - name: Restore Packages
        run: nuget restore Testably.Abstractions.sln
      - name: Build Solution
        run: msbuild.exe Testably.Abstractions.sln /p:platform="Any CPU" /p:configuration="Release"
      - name: Run Tests
        run: vstest.console.exe .\Tests\Testably.Abstractions.Tests\bin\Release\net472\Testably.Abstractions.Tests.dll .\Tests\Testably.Abstractions.Extensions.Tests\bin\Release\net472\Testably.Abstractions.Extensions.Tests.dll

  analyze:
    name: Static code analysis
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          dotnet tool install minver-cli --global
          dotnet tool restore
          $version = minver -t v
          $productVersion,$prerelease = $version -split '-',2
          echo "Detected product version: $productVersion"
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"Testably_Testably.Abstractions" /o:"testably" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /v:"$productVersion" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet tool install --global dotnet-coverage
          dotnet restore -s 'nuget.config'
          dotnet build --no-incremental /p:NetCoreOnly=True
          dotnet-coverage collect 'dotnet test --no-build' -f xml  -o 'coverage.xml'
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
